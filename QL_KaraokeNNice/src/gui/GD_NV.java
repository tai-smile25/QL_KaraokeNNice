/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import com.toedter.calendar.JDateChooserCellEditor;
import connectDB.ConnectDB;
import dao.NhanVien_DAO;
import entity.NhanVien;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author PC BAO THONG
 */
public class GD_NV extends javax.swing.JPanel {

    private NhanVien_DAO nv_dao;
    private DefaultTableModel modelNV;
//    private DefaultTableModel dm;

    /**
     * Creates new form GD_NV
     */
    public GD_NV() {
        try {
            ConnectDB.getInstance().connect();
            System.out.println("Ket noi Database thanh cong");
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        nv_dao = new NhanVien_DAO();
        initComponents();
        tableNhanVien();
    }

    private void tableNhanVien() {
        PromptSupport.setPrompt("Nhập số điện thoại", txtTim1);
        tableDSNV.getTableHeader().setFont(new Font("Cambria", Font.PLAIN, 16));
        tableDSNV.getTableHeader().setOpaque(false);
        tableDSNV.getTableHeader().setBackground(new Color(32, 136, 203));
        tableDSNV.getTableHeader().setForeground(new Color(255, 255, 255));
        //chức vụ
//        String[] chucvu = {"Quản lý", "Lễ tân", "Bảo vệ", "Phục vụ"};
//        JComboBox comboBoxCV = new JComboBox(chucvu);
//        comboBoxCV.setFont(new Font("Cambria", Font.PLAIN, 16));
//        comboBoxCV.setBackground(new Color(255, 255, 255));
//        tableDSNV.getColumnModel().getColumn(9).setCellEditor(new DefaultCellEditor(comboBoxCV));
//        //giới tính
//        String[] gioitinh = {"Nam", "Nữ"};
//        JComboBox comboBoxGT = new JComboBox(gioitinh);
//        comboBoxGT.setFont(new Font("Cambria", Font.PLAIN, 16));
//        comboBoxGT.setBackground(new Color(255, 255, 255));
//        tableDSNV.getColumnModel().getColumn(5).setCellEditor(new DefaultCellEditor(comboBoxGT));
//        //trạng thái
//        String[] trangthai = {"Đang làm", "Đã nghỉ"};
//        JComboBox comboBoxTT = new JComboBox(trangthai);
//        comboBoxTT.setFont(new Font("Cambria", Font.PLAIN, 16));
//        comboBoxTT.setBackground(new Color(255, 255, 255));
//        tableDSNV.getColumnModel().getColumn(11).setCellEditor(new DefaultCellEditor(comboBoxTT));
//        //ngày sinh
//        tableDSNV.getColumnModel().getColumn(4).setCellEditor(new JDateChooserCellEditor());
        modelNV = (DefaultTableModel) tableDSNV.getModel();
        napDuLieuNV();
    }

    private void napDuLieuNV() {
        ArrayList<NhanVien> dsNV;
        dsNV = nv_dao.getAllNhanVien();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        for (NhanVien nv : dsNV) {
            String mk;
            if (nv.getMatKhau() != null) {
                mk = nv.getMatKhau();
            } else {
                mk = "";
            }
            modelNV.addRow(new Object[]{nv.getMaNV(), nv.getSoCCCD(), nv.getHoNV(), nv.getTenNV(), nv.getNamSinh(), chuyenGTSangString(nv), nv.getSdtNV(), nv.getEmailNV(), nv.getDiaChiNV(), nv.getChucVu(), mk, chuyenTTLVSangString(nv)});
        }
    }

    public String chuyenGTSangString(NhanVien nv) {
        if (nv.isGioiTinhNV() == true) {
            return "Nam";
        }
        return "Nữ";
    }

    public String chuyenTTLVSangString(NhanVien nv) {
        if (nv.isTrangThaiLamViec() == true) {
            return "Đang làm";
        }
        return "Đã nghỉ";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btngGioiTinh = new javax.swing.ButtonGroup();
        btngTrangThai = new javax.swing.ButtonGroup();
        GD_NhanVien = new javax.swing.JPanel();
        panelNorth1 = new javax.swing.JPanel();
        lblMaNV = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        lblCCCD = new javax.swing.JLabel();
        txtCCCD = new javax.swing.JTextField();
        lblHo = new javax.swing.JLabel();
        txtHo = new javax.swing.JTextField();
        lblTen = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        lblNgaySinh = new javax.swing.JLabel();
        ngaySinh = new com.toedter.calendar.JDateChooser();
        lblGioiTinh = new javax.swing.JLabel();
        radioNam = new javax.swing.JRadioButton();
        radioNu = new javax.swing.JRadioButton();
        lblSDT = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblDiaChi = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        txtChucVu = new javax.swing.JLabel();
        comboChucVu = new javax.swing.JComboBox<>();
        lblMatKhau = new javax.swing.JLabel();
        pwMatKhau = new javax.swing.JPasswordField();
        lblTrangThai = new javax.swing.JLabel();
        radioDangLam = new javax.swing.JRadioButton();
        radioDaNghi = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnTim1 = new javax.swing.JButton();
        txtTim1 = new javax.swing.JTextField();
        btnLamMoi1 = new javax.swing.JButton();
        btnXoa1 = new javax.swing.JButton();
        panelDSNV = new javax.swing.JPanel();
        scrollPane1 = new javax.swing.JScrollPane();
        tableDSNV = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        GD_NhanVien.setMaximumSize(new java.awt.Dimension(1200, 820));
        GD_NhanVien.setLayout(new java.awt.BorderLayout());

        panelNorth1.setBackground(new java.awt.Color(255, 255, 255));
        panelNorth1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 0, 16))); // NOI18N
        panelNorth1.setMaximumSize(new java.awt.Dimension(1200, 300));
        panelNorth1.setMinimumSize(new java.awt.Dimension(1200, 300));
        panelNorth1.setPreferredSize(new java.awt.Dimension(1200, 300));
        java.awt.GridBagLayout panelNorth1Layout = new java.awt.GridBagLayout();
        panelNorth1Layout.columnWidths = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0};
        panelNorth1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        panelNorth1.setLayout(panelNorth1Layout);

        lblMaNV.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblMaNV.setText("Mã nhân viên");
        lblMaNV.setMaximumSize(new java.awt.Dimension(110, 40));
        lblMaNV.setMinimumSize(new java.awt.Dimension(110, 40));
        lblMaNV.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(lblMaNV, gridBagConstraints);

        txtMaNV.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtMaNV.setText("NV001");
        txtMaNV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtMaNV.setEnabled(false);
        txtMaNV.setMaximumSize(new java.awt.Dimension(150, 30));
        txtMaNV.setMinimumSize(new java.awt.Dimension(150, 30));
        txtMaNV.setPreferredSize(new java.awt.Dimension(185, 30));
        txtMaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNVActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        panelNorth1.add(txtMaNV, gridBagConstraints);

        lblCCCD.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblCCCD.setText("Căn cước công dân");
        lblCCCD.setMaximumSize(new java.awt.Dimension(155, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(lblCCCD, gridBagConstraints);

        txtCCCD.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtCCCD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCCCD.setMaximumSize(new java.awt.Dimension(185, 185));
        txtCCCD.setMinimumSize(new java.awt.Dimension(150, 30));
        txtCCCD.setPreferredSize(new java.awt.Dimension(185, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        panelNorth1.add(txtCCCD, gridBagConstraints);

        lblHo.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblHo.setText("Họ nhân viên");
        lblHo.setMaximumSize(new java.awt.Dimension(110, 40));
        lblHo.setMinimumSize(new java.awt.Dimension(110, 40));
        lblHo.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(lblHo, gridBagConstraints);

        txtHo.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtHo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtHo.setMaximumSize(new java.awt.Dimension(150, 30));
        txtHo.setMinimumSize(new java.awt.Dimension(150, 30));
        txtHo.setPreferredSize(new java.awt.Dimension(185, 30));
        txtHo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        panelNorth1.add(txtHo, gridBagConstraints);

        lblTen.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblTen.setText("Tên nhân viên");
        lblTen.setMaximumSize(new java.awt.Dimension(110, 40));
        lblTen.setMinimumSize(new java.awt.Dimension(110, 40));
        lblTen.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(lblTen, gridBagConstraints);

        txtTen.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtTen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtTen.setMaximumSize(new java.awt.Dimension(185, 185));
        txtTen.setMinimumSize(new java.awt.Dimension(150, 30));
        txtTen.setPreferredSize(new java.awt.Dimension(185, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        panelNorth1.add(txtTen, gridBagConstraints);

        lblNgaySinh.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblNgaySinh.setText("Ngày sinh");
        lblNgaySinh.setMaximumSize(new java.awt.Dimension(110, 40));
        lblNgaySinh.setMinimumSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(lblNgaySinh, gridBagConstraints);

        ngaySinh.setBackground(new java.awt.Color(255, 255, 255));
        ngaySinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ngaySinh.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        ngaySinh.setMaximumSize(new java.awt.Dimension(250, 30));
        ngaySinh.setMinimumSize(new java.awt.Dimension(250, 30));
        ngaySinh.setPreferredSize(new java.awt.Dimension(185, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        panelNorth1.add(ngaySinh, gridBagConstraints);

        lblGioiTinh.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblGioiTinh.setText("Giới tính");
        lblGioiTinh.setMaximumSize(new java.awt.Dimension(110, 40));
        lblGioiTinh.setMinimumSize(new java.awt.Dimension(110, 40));
        lblGioiTinh.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(lblGioiTinh, gridBagConstraints);

        radioNam.setBackground(new java.awt.Color(255, 255, 255));
        btngGioiTinh.add(radioNam);
        radioNam.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        radioNam.setText("Nam");
        radioNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioNamActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(radioNam, gridBagConstraints);

        radioNu.setBackground(new java.awt.Color(255, 255, 255));
        btngGioiTinh.add(radioNu);
        radioNu.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        radioNu.setText("Nữ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        panelNorth1.add(radioNu, gridBagConstraints);

        lblSDT.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblSDT.setText("Số điện thoại");
        lblSDT.setMaximumSize(new java.awt.Dimension(110, 40));
        lblSDT.setMinimumSize(new java.awt.Dimension(110, 40));
        lblSDT.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(lblSDT, gridBagConstraints);

        txtSDT.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtSDT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtSDT.setMaximumSize(new java.awt.Dimension(150, 30));
        txtSDT.setMinimumSize(new java.awt.Dimension(150, 30));
        txtSDT.setPreferredSize(new java.awt.Dimension(185, 30));
        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        panelNorth1.add(txtSDT, gridBagConstraints);

        lblEmail.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblEmail.setText("Email");
        lblEmail.setMaximumSize(new java.awt.Dimension(110, 40));
        lblEmail.setMinimumSize(new java.awt.Dimension(110, 40));
        lblEmail.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(lblEmail, gridBagConstraints);

        txtEmail.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtEmail.setMaximumSize(new java.awt.Dimension(250, 30));
        txtEmail.setMinimumSize(new java.awt.Dimension(250, 30));
        txtEmail.setPreferredSize(new java.awt.Dimension(185, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 2;
        panelNorth1.add(txtEmail, gridBagConstraints);

        lblDiaChi.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblDiaChi.setText("Địa chỉ");
        lblDiaChi.setMaximumSize(new java.awt.Dimension(110, 40));
        lblDiaChi.setMinimumSize(new java.awt.Dimension(110, 40));
        lblDiaChi.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(lblDiaChi, gridBagConstraints);

        txtDiaChi.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtDiaChi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDiaChi.setMaximumSize(new java.awt.Dimension(250, 30));
        txtDiaChi.setMinimumSize(new java.awt.Dimension(250, 30));
        txtDiaChi.setPreferredSize(new java.awt.Dimension(185, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 4;
        panelNorth1.add(txtDiaChi, gridBagConstraints);

        txtChucVu.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtChucVu.setText("Chức vụ");
        txtChucVu.setMaximumSize(new java.awt.Dimension(110, 40));
        txtChucVu.setMinimumSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(txtChucVu, gridBagConstraints);

        comboChucVu.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        comboChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý", "Lễ tân", "Bảo vệ", "Phục vụ", "Đầu bếp", "Lao công" }));
        comboChucVu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        comboChucVu.setMaximumSize(new java.awt.Dimension(150, 30));
        comboChucVu.setMinimumSize(new java.awt.Dimension(150, 30));
        comboChucVu.setPreferredSize(new java.awt.Dimension(185, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        panelNorth1.add(comboChucVu, gridBagConstraints);

        lblMatKhau.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblMatKhau.setText("Mật khẩu");
        lblMatKhau.setMaximumSize(new java.awt.Dimension(110, 40));
        lblMatKhau.setMinimumSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(lblMatKhau, gridBagConstraints);

        pwMatKhau.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        pwMatKhau.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pwMatKhau.setMaximumSize(new java.awt.Dimension(185, 185));
        pwMatKhau.setMinimumSize(new java.awt.Dimension(150, 30));
        pwMatKhau.setPreferredSize(new java.awt.Dimension(185, 30));
        pwMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwMatKhauActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        panelNorth1.add(pwMatKhau, gridBagConstraints);

        lblTrangThai.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblTrangThai.setText("Trạng thái");
        lblTrangThai.setMaximumSize(new java.awt.Dimension(110, 40));
        lblTrangThai.setMinimumSize(new java.awt.Dimension(110, 40));
        lblTrangThai.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(lblTrangThai, gridBagConstraints);

        radioDangLam.setBackground(new java.awt.Color(255, 255, 255));
        btngTrangThai.add(radioDangLam);
        radioDangLam.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        radioDangLam.setText("Đang làm");
        radioDangLam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDangLamActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(radioDangLam, gridBagConstraints);

        radioDaNghi.setBackground(new java.awt.Color(255, 255, 255));
        btngTrangThai.add(radioDaNghi);
        radioDaNghi.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        radioDaNghi.setText("Đã nghỉ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        panelNorth1.add(radioDaNghi, gridBagConstraints);

        btnThem.setBackground(new java.awt.Color(51, 102, 255));
        btnThem.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add-user.png"))); // NOI18N
        btnThem.setText("Thêm nhân viên");
        btnThem.setMaximumSize(new java.awt.Dimension(180, 40));
        btnThem.setMinimumSize(new java.awt.Dimension(180, 30));
        btnThem.setPreferredSize(new java.awt.Dimension(180, 30));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(btnThem, gridBagConstraints);

        btnCapNhat.setBackground(new java.awt.Color(102, 255, 51));
        btnCapNhat.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        btnCapNhat.setForeground(new java.awt.Color(255, 255, 255));
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/system-update.png"))); // NOI18N
        btnCapNhat.setText("Cập nhật thông tin");
        btnCapNhat.setMaximumSize(new java.awt.Dimension(190, 40));
        btnCapNhat.setMinimumSize(new java.awt.Dimension(190, 30));
        btnCapNhat.setPreferredSize(new java.awt.Dimension(190, 30));
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        panelNorth1.add(btnCapNhat, gridBagConstraints);

        btnTim1.setBackground(new java.awt.Color(121, 188, 215));
        btnTim1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        btnTim1.setForeground(new java.awt.Color(255, 255, 255));
        btnTim1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/search-user.png"))); // NOI18N
        btnTim1.setText("Tìm");
        btnTim1.setMaximumSize(new java.awt.Dimension(90, 40));
        btnTim1.setMinimumSize(new java.awt.Dimension(90, 30));
        btnTim1.setPreferredSize(new java.awt.Dimension(90, 30));
        btnTim1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTim1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(btnTim1, gridBagConstraints);

        txtTim1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtTim1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtTim1.setMaximumSize(new java.awt.Dimension(150, 30));
        txtTim1.setMinimumSize(new java.awt.Dimension(150, 30));
        txtTim1.setPreferredSize(new java.awt.Dimension(185, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        panelNorth1.add(txtTim1, gridBagConstraints);

        btnLamMoi1.setBackground(new java.awt.Color(0, 255, 153));
        btnLamMoi1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        btnLamMoi1.setForeground(new java.awt.Color(255, 255, 255));
        btnLamMoi1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh.png"))); // NOI18N
        btnLamMoi1.setText("Làm mới");
        btnLamMoi1.setMaximumSize(new java.awt.Dimension(70, 40));
        btnLamMoi1.setMinimumSize(new java.awt.Dimension(70, 30));
        btnLamMoi1.setPreferredSize(new java.awt.Dimension(130, 30));
        btnLamMoi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoi1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(btnLamMoi1, gridBagConstraints);

        btnXoa1.setBackground(new java.awt.Color(204, 204, 204));
        btnXoa1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        btnXoa1.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/eraser.png"))); // NOI18N
        btnXoa1.setText("Xóa trắng");
        btnXoa1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnXoa1.setMaximumSize(new java.awt.Dimension(120, 40));
        btnXoa1.setMinimumSize(new java.awt.Dimension(70, 30));
        btnXoa1.setPreferredSize(new java.awt.Dimension(130, 30));
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth1.add(btnXoa1, gridBagConstraints);

        GD_NhanVien.add(panelNorth1, java.awt.BorderLayout.PAGE_START);

        panelDSNV.setBackground(new java.awt.Color(255, 255, 255));
        panelDSNV.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        panelDSNV.setMaximumSize(new java.awt.Dimension(1200, 220));
        panelDSNV.setMinimumSize(new java.awt.Dimension(1200, 220));
        panelDSNV.setPreferredSize(new java.awt.Dimension(1200, 220));
        panelDSNV.setLayout(new java.awt.BorderLayout());

        scrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        scrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 0, 16))); // NOI18N

        tableDSNV.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        tableDSNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV", "CCCD", "Họ", "Tên", "Ngày sinh", "Giới tính", "Số điện thoại", "Email", "Địa chỉ", "Chức vụ", "Mật khẩu", "Trạng thái"
            }
        ));
        tableDSNV.setRowHeight(25);
        tableDSNV.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tableDSNV.setShowHorizontalLines(true);
        tableDSNV.getTableHeader().setReorderingAllowed(false);
        tableDSNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDSNVMouseClicked(evt);
            }
        });
        scrollPane1.setViewportView(tableDSNV);

        panelDSNV.add(scrollPane1, java.awt.BorderLayout.CENTER);

        GD_NhanVien.add(panelDSNV, java.awt.BorderLayout.CENTER);

        add(GD_NhanVien, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNVActionPerformed

    private void txtHoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoActionPerformed

    private void radioNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioNamActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTActionPerformed

    private void pwMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwMatKhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwMatKhauActionPerformed

    private void radioDangLamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDangLamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioDangLamActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (valid()) {
            them();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnTim1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTim1ActionPerformed
       String sdt = txtTim1.getText().trim();
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            NhanVien nv = nv_dao.getNVTheoSDT(sdt);
            xoaTrang();
            modelNV.getDataVector().removeAllElements();
            String mk;
            if (nv.getMatKhau() != null) {
                mk = nv.getMatKhau();
            } else {
                mk = "";
            }
            String[] data = {nv.getMaNV(), nv.getSoCCCD(), nv.getHoNV(), nv.getTenNV(), formatter.format(nv.getNamSinh()), chuyenGTSangString(nv), nv.getSdtNV(), nv.getEmailNV(),
            nv.getDiaChiNV(), nv.getChucVu(), mk, chuyenTTLVSangString(nv)};
            modelNV.addRow(data);
    }//GEN-LAST:event_btnTim1ActionPerformed

    private void btnLamMoi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoi1ActionPerformed
        lamMoi();
    }//GEN-LAST:event_btnLamMoi1ActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        xoaTrang();
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        if (valid()) {
            update();
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void tableDSNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDSNVMouseClicked
        // TODO add your handling code here:
        int row = tableDSNV.getSelectedRow();
        txtMaNV.setText(modelNV.getValueAt(row, 0).toString());
        txtCCCD.setText(modelNV.getValueAt(row, 1).toString());
        txtHo.setText(modelNV.getValueAt(row, 2).toString());
        txtTen.setText(modelNV.getValueAt(row, 3).toString());
        txtSDT.setText(modelNV.getValueAt(row, 6).toString());
        txtEmail.setText(modelNV.getValueAt(row, 7).toString());
        txtDiaChi.setText(modelNV.getValueAt(row, 8).toString());
        comboChucVu.setSelectedItem(modelNV.getValueAt(row, 9).toString());
        if (modelNV.getValueAt(row, 10).toString() == "") {
            pwMatKhau.setText("");
        } else {
            pwMatKhau.setText(modelNV.getValueAt(row, 10).toString());
        }
        String gt = modelNV.getValueAt(row, 5).toString();
        if (gt == "Nam") {
            radioNam.setSelected(true);
            radioNu.setSelected(false);
        } else {
            radioNu.setSelected(true);
            radioNam.setSelected(false);
        }
        String tt = modelNV.getValueAt(row, 11).toString();
        if (tt == "Đang làm") {
            radioDangLam.setSelected(true);
            radioDaNghi.setSelected(false);
        } else {
            radioDangLam.setSelected(false);
            radioDaNghi.setSelected(true);
        }
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Date date = null;
        try {
            try {
                date = (Date) format.parse(modelNV.getValueAt(row, 4).toString());
            } catch (java.text.ParseException e2) {
                // TODO: handle exception
                e2.printStackTrace();
            }
        } catch (Exception e2) {
            // TODO: handle exception
            e2.printStackTrace();
        }
        ngaySinh.setDate(date);

    }//GEN-LAST:event_tableDSNVMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GD_NhanVien;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnLamMoi1;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTim1;
    private javax.swing.JButton btnXoa1;
    private javax.swing.ButtonGroup btngGioiTinh;
    private javax.swing.ButtonGroup btngTrangThai;
    private javax.swing.JComboBox<String> comboChucVu;
    private javax.swing.JLabel lblCCCD;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblHo;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblMatKhau;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTen;
    private javax.swing.JLabel lblTrangThai;
    private com.toedter.calendar.JDateChooser ngaySinh;
    private javax.swing.JPanel panelDSNV;
    private javax.swing.JPanel panelNorth1;
    private javax.swing.JPasswordField pwMatKhau;
    private javax.swing.JRadioButton radioDaNghi;
    private javax.swing.JRadioButton radioDangLam;
    private javax.swing.JRadioButton radioNam;
    private javax.swing.JRadioButton radioNu;
    private javax.swing.JScrollPane scrollPane1;
    private javax.swing.JTable tableDSNV;
    private javax.swing.JTextField txtCCCD;
    private javax.swing.JLabel txtChucVu;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHo;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTim1;
    // End of variables declaration//GEN-END:variables

    public void xoaTrang() {
        txtMaNV.setText("");
        txtCCCD.setText("");
        txtHo.setText("");
        txtTen.setText("");
        txtSDT.setText("");
        txtEmail.setText("");
        txtDiaChi.setText("");
        radioNu.setSelected(false);
        radioNam.setSelected(false);
        radioDaNghi.setSelected(false);
        radioDangLam.setSelected(false);
        ngaySinh.setDate(null);
        pwMatKhau.setText("");
        txtMaNV.requestFocus();

    }

    private void lamMoi() {
        xoaTrang();
        modelNV.setRowCount(0);
        napDuLieuNV();
    }

    private void update() {
        int r = tableDSNV.getSelectedRow();
        if (r == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần sửa!!");

        }
        if (r >= 0) {
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String gt = "Nữ";
            if (radioNam.isSelected() && !radioNu.isSelected()) {
                gt = "Nam";
            }
            String t = "Đã nghỉ ";
            if (radioDangLam.isSelected() && !radioDaNghi.isSelected()) {
                t = "Đang làm ";
            }
            String ngaySinh1 = dateFormat.format(ngaySinh.getDate());
            NhanVien nv = reverSPFromTextFielde();
            if (nv_dao.updateNhanVien(nv)) {
                tableDSNV.setValueAt(txtCCCD.getText(), r, 1);
                tableDSNV.setValueAt(comboChucVu.getSelectedItem().toString(), r, 9);
                tableDSNV.setValueAt(txtDiaChi.getText(), r, 8);
                tableDSNV.setValueAt(txtEmail.getText(), r, 7);
                tableDSNV.setValueAt(txtHo.getText(), r, 2);
                tableDSNV.setValueAt(txtTen.getText(), r, 3);
                tableDSNV.setValueAt(txtMaNV.getText(), r, 0);
                tableDSNV.setValueAt(gt, r, 5);
                tableDSNV.setValueAt(t, r, 11);
                tableDSNV.setValueAt(ngaySinh1, r, 4);
                tableDSNV.setValueAt(txtSDT.getText(), r, 6);
                JOptionPane.showMessageDialog(this, "Sửa thành công!!!");

            } else {
                JOptionPane.showMessageDialog(this, "Sửa không thành công!!");
            }
        }

    }

    private NhanVien reverSPFromTextFielde() {
        // TODO Auto-generated method stub
        NhanVien nv = new NhanVien();

        radioNu.setSelected(false);
        radioNam.setSelected(false);
        radioDaNghi.setSelected(false);
        radioDangLam.setSelected(false);
        String ma = txtMaNV.getText().toString();
        String cccd = txtCCCD.getText().toString();
        String ho = txtHo.getText().toString();
        String ten = txtTen.getText().toString();
        String sdt = txtSDT.getText().toString();
        String email = txtEmail.getText().toString();
        String diachi = txtDiaChi.getText().toString();
        String chucvu = comboChucVu.getSelectedItem().toString();
        String matkhau = pwMatKhau.getText().trim();
        Date ngaySinh1 = (Date) ngaySinh.getDate();
        boolean gt = true;
        boolean t = true;
        if (radioNu.isSelected()) {
            gt = false;
        }
        if (radioDaNghi.isSelected()) {
            t = false;
        }
        return new NhanVien(ma, cccd, ho, ten, ngaySinh1, gt, sdt, email, diachi, chucvu, matkhau, t);
    }

    public boolean valid() {
        String ho, ten, cccd, sdt, email;
        ho = txtHo.getText().trim();
        ten = txtTen.getText().trim();
        cccd = txtCCCD.getText().trim();
        sdt = txtSDT.getText().trim();
        email = txtEmail.getText().trim();
        if (!(ho.length() > 0 && ho.matches("^[\\p{L}]*(?:\\h+[\\p{L}]*)*$"))) {
            JOptionPane.showMessageDialog(null, "Error: Họ khách hàng không có số hay kí tự đặc biệt");
            txtHo.requestFocus();
            return false;
        } else if (!(ten.length() > 0 && ten.matches("^[\\p{L}]*$"))) {
            JOptionPane.showMessageDialog(null, "Error: Tên khách hàng là 1 từ, không có số, hay kí tự đặc biệt");
            txtTen.requestFocus();
            return false;
        } else if (!(sdt.length() > 0 && sdt.matches("^\\d{10}$"))) {
            JOptionPane.showMessageDialog(null, "Error: Số điện thoại là 1 dãy số nguyên có 10 số");
            txtSDT.requestFocus();
            return false;
        } else if (!(cccd.length() >= 0 && cccd.matches("^\\d{12}$"))) {
            JOptionPane.showMessageDialog(null, "CCCD phải 12 số");
            txtCCCD.requestFocus();
            return false;
        } else if (!(email.length() >= 0 && email.matches("^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$"))) {
            JOptionPane.showMessageDialog(null, "Sai định dạng email");
            txtEmail.requestFocus();
            return false;
        }
        return true;
    }

    public void them() {
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String ma = nv_dao.maNV_Auto();
        String cccd = txtCCCD.getText().toString();
        String ho = txtHo.getText().toString();
        String ten = txtTen.getText().toString();
        String sdt = txtSDT.getText().toString();
        String email = txtEmail.getText().toString();
        String diachi = txtDiaChi.getText().toString();
        String chucvu = comboChucVu.getSelectedItem().toString();
        String matkhau = pwMatKhau.getText().trim();
        String ngaySinh1 = dateFormat.format(ngaySinh.getDate());
        Date dNgaySinh = (Date) ngaySinh.getDate();
        String gt = "Nam";
        boolean bGT = true;
        if (radioNu.isSelected()) {
            gt = "Nữ";
            bGT = false;
        }
        String t = "Đang làm ";
        boolean bTinhTrang = true;
        if (radioDaNghi.isSelected()) {
            t = "Đã nghỉ ";
            bTinhTrang = false;
        }
        NhanVien nv = new NhanVien(ma, cccd, ho, ten, dNgaySinh, bGT, sdt, email, diachi, chucvu, matkhau, bTinhTrang);
        if (nv_dao.insertNhanVien(nv)) {
            String[] data = {ma, cccd, ho, ten, ngaySinh1, gt, sdt, email, diachi, chucvu, matkhau, t};
            modelNV.addRow(data);
            JOptionPane.showMessageDialog(this, "Thêm Thành Công !");
        }

    }
}
