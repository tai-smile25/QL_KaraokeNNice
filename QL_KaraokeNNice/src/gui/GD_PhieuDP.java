/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import connectDB.ConnectDB;
import dao.KhachHang_DAO;
import dao.NhanVien_DAO;
import dao.PhieuDatPhong_DAO;
import dao.Phong_DAO;
import entity.KhachHang;
import entity.NhanVien;
import entity.PhieuDatPhong;
import entity.Phong;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author PC BAO THONG
 */
public class GD_PhieuDP extends javax.swing.JPanel {

    //DAO
    private KhachHang_DAO kh_dao;
    private NhanVien_DAO nv_dao;
    private PhieuDatPhong_DAO pdp_dao;
    private Phong_DAO phong_dao;

    //HoaDon
    private DefaultTableModel modelPDP;

    //List
    private ArrayList<KhachHang> dsKH;
    private ArrayList<NhanVien> dsNV;
    private ArrayList<PhieuDatPhong> dsPDP;

    public GD_PhieuDP() {
        try {
            ConnectDB.getInstance().connect();
            System.out.println("Ket noi Database thanh cong");
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        kh_dao = new KhachHang_DAO();
        nv_dao = new NhanVien_DAO();
        pdp_dao = new PhieuDatPhong_DAO();
        phong_dao = new Phong_DAO();
        initComponents();
        tablePhieuDat();
    }

    private void tablePhieuDat() {
        PromptSupport.setPrompt("Nhập số điện thoại khách", txtTimSDT);
        tablePhieu.getTableHeader().setFont(new Font("Cambria", Font.PLAIN, 16));
        tablePhieu.getTableHeader().setOpaque(false);
        tablePhieu.getTableHeader().setBackground(new Color(32, 136, 203));
        tablePhieu.getTableHeader().setForeground(new Color(255, 255, 255));
        modelPDP = (DefaultTableModel) tablePhieu.getModel();
        napDuLieuPDP();
    }

    private void napDuLieuPDP() {
        dsPDP = pdp_dao.getAllPDP();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String trangThai;
        for (PhieuDatPhong pdp : dsPDP) {
            KhachHang kh = kh_dao.getKhachHangTheoMa(pdp.getKhachHang().getMaKH());
            NhanVien nv = nv_dao.getNhanVienTheoMa(pdp.getNhanVienLap().getMaNV());
            String tgNhan = formatter.format(pdp.getThoiGianNhan());
            String tgDat = formatter.format(pdp.getThoiGianDat());
            if (pdp.isTrangThai()) {
                trangThai = "Đã nhận";
            } else {
                trangThai = "Chờ nhận phòng";
            }
            modelPDP.addRow(new Object[]{pdp.getMaPhieu(), kh.getHoKH() + " " + kh.getTenKH(),
                kh.getSdtKH(), pdp.getPhong().getMaPhong(), tgDat, tgNhan, nv.getHoNV() + " " + nv.getTenNV(), trangThai});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        GD_PhieuDatPhong = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePhieu = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        cboTrangThai = new javax.swing.JComboBox<>();
        txtMaPhieu = new javax.swing.JTextField();
        txtTenNV = new javax.swing.JTextField();
        txtTimSDT = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        btnTim = new javax.swing.JButton();
        txtLamMoi = new javax.swing.JButton();
        txtTenKH = new javax.swing.JTextField();
        btnCapNhat = new javax.swing.JButton();
        txtTGN = new javax.swing.JTextField();
        txtTGD = new javax.swing.JTextField();
        txtMaPhong = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        GD_PhieuDatPhong.setBackground(new java.awt.Color(255, 255, 255));
        GD_PhieuDatPhong.setLayout(new java.awt.BorderLayout());

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách phiếu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 0, 16))); // NOI18N
        jPanel16.setMinimumSize(new java.awt.Dimension(1200, 220));
        jPanel16.setPreferredSize(new java.awt.Dimension(1200, 220));
        jPanel16.setLayout(new java.awt.BorderLayout());

        tablePhieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu", "Tên khách hàng", "Số điện thoại", "Phòng", "Thời gian đặt", "Thời gian nhận", "Tên nhân viên", "Trạng thái phiếu"
            }
        ));
        tablePhieu.setRowHeight(25);
        tablePhieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePhieuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablePhieu);

        jPanel16.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        GD_PhieuDatPhong.add(jPanel16, java.awt.BorderLayout.CENTER);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin phiếu đặt phòng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 0, 16))); // NOI18N
        jPanel15.setMinimumSize(new java.awt.Dimension(1200, 300));
        jPanel15.setPreferredSize(new java.awt.Dimension(1200, 300));
        java.awt.GridBagLayout jPanel15Layout = new java.awt.GridBagLayout();
        jPanel15Layout.columnWidths = new int[] {0, 15, 0, 15, 0, 15, 0, 15, 0, 15, 0, 15, 0};
        jPanel15Layout.rowHeights = new int[] {0, 20, 0, 20, 0, 20, 0};
        jPanel15.setLayout(jPanel15Layout);

        cboTrangThai.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chờ nhận phòng", "Đã nhận" }));
        cboTrangThai.setMinimumSize(new java.awt.Dimension(200, 30));
        cboTrangThai.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel15.add(cboTrangThai, gridBagConstraints);

        txtMaPhieu.setEditable(false);
        txtMaPhieu.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtMaPhieu.setEnabled(false);
        txtMaPhieu.setMinimumSize(new java.awt.Dimension(200, 30));
        txtMaPhieu.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel15.add(txtMaPhieu, gridBagConstraints);

        txtTenNV.setEditable(false);
        txtTenNV.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtTenNV.setMinimumSize(new java.awt.Dimension(200, 30));
        txtTenNV.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 2;
        jPanel15.add(txtTenNV, gridBagConstraints);

        txtTimSDT.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtTimSDT.setMinimumSize(new java.awt.Dimension(200, 30));
        txtTimSDT.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        jPanel15.add(txtTimSDT, gridBagConstraints);

        txtSDT.setEditable(false);
        txtSDT.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtSDT.setMinimumSize(new java.awt.Dimension(200, 30));
        txtSDT.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        jPanel15.add(txtSDT, gridBagConstraints);

        jLabel26.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel26.setText("Trạng thái phiếu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(jLabel26, gridBagConstraints);

        jLabel25.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel25.setText("Thời gian nhận");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(jLabel25, gridBagConstraints);

        jLabel24.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel24.setText("Thời gian đặt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(jLabel24, gridBagConstraints);

        jLabel23.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel23.setText("Mã phiếu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(jLabel23, gridBagConstraints);

        jLabel22.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel22.setText("Tên nhân viên");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(jLabel22, gridBagConstraints);

        jLabel21.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel21.setText("Tên khách hàng");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(jLabel21, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel20.setText("Số điện thoại");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(jLabel20, gridBagConstraints);

        btnTim.setBackground(new java.awt.Color(121, 188, 215));
        btnTim.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        btnTim.setForeground(new java.awt.Color(255, 255, 255));
        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/search-doc.png"))); // NOI18N
        btnTim.setText("Tìm");
        btnTim.setMinimumSize(new java.awt.Dimension(100, 30));
        btnTim.setPreferredSize(new java.awt.Dimension(150, 30));
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(btnTim, gridBagConstraints);

        txtLamMoi.setBackground(new java.awt.Color(0, 255, 213));
        txtLamMoi.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtLamMoi.setForeground(new java.awt.Color(255, 255, 255));
        txtLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh.png"))); // NOI18N
        txtLamMoi.setText("Làm mới");
        txtLamMoi.setMinimumSize(new java.awt.Dimension(120, 30));
        txtLamMoi.setPreferredSize(new java.awt.Dimension(150, 30));
        txtLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLamMoiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(txtLamMoi, gridBagConstraints);

        txtTenKH.setEditable(false);
        txtTenKH.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtTenKH.setMinimumSize(new java.awt.Dimension(200, 30));
        txtTenKH.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        jPanel15.add(txtTenKH, gridBagConstraints);

        btnCapNhat.setBackground(new java.awt.Color(102, 255, 51));
        btnCapNhat.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        btnCapNhat.setForeground(new java.awt.Color(255, 255, 255));
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/system-update.png"))); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.setMinimumSize(new java.awt.Dimension(120, 30));
        btnCapNhat.setPreferredSize(new java.awt.Dimension(150, 30));
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        jPanel15.add(btnCapNhat, gridBagConstraints);

        txtTGN.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtTGN.setPreferredSize(new java.awt.Dimension(200, 30));
        txtTGN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTGNActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        jPanel15.add(txtTGN, gridBagConstraints);

        txtTGD.setEditable(false);
        txtTGD.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtTGD.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel15.add(txtTGD, gridBagConstraints);

        txtMaPhong.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtMaPhong.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        jPanel15.add(txtMaPhong, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel1.setText("Phòng");
        jLabel1.setPreferredSize(new java.awt.Dimension(104, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel15.add(jLabel1, gridBagConstraints);

        GD_PhieuDatPhong.add(jPanel15, java.awt.BorderLayout.PAGE_START);

        add(GD_PhieuDatPhong, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtTGNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTGNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTGNActionPerformed

    private void tablePhieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePhieuMouseClicked
        int r = tablePhieu.getSelectedRow();
        txtMaPhieu.setText(modelPDP.getValueAt(r, 0).toString());
        txtTenKH.setText(modelPDP.getValueAt(r, 1).toString());
        txtSDT.setText(modelPDP.getValueAt(r, 2).toString());
        txtMaPhong.setText(modelPDP.getValueAt(r, 3).toString());
        txtTGD.setText(modelPDP.getValueAt(r, 4).toString());
        txtTGN.setText(modelPDP.getValueAt(r, 5).toString());
        txtTenNV.setText(modelPDP.getValueAt(r, 6).toString());
        if (modelPDP.getValueAt(r, 7).toString().equalsIgnoreCase("Đã nhận")) {
            cboTrangThai.setSelectedItem("Đã nhận");
        } else {
            cboTrangThai.setSelectedItem("Chờ nhận phòng");
        }
        String mP = modelPDP.getValueAt(r, 0).toString();
        PhieuDatPhong pd = pdp_dao.getPDPTheoMa(mP);
    }//GEN-LAST:event_tablePhieuMouseClicked

    private void txtLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLamMoiActionPerformed
        modelPDP.getDataVector().removeAllElements();
        napDuLieuPDP();
    }//GEN-LAST:event_txtLamMoiActionPerformed

    private PhieuDatPhong LayDuLieuTxtPDP() throws ParseException {
        String maPhieu = txtMaPhieu.getText().trim();
        String maPhong = txtMaPhong.getText().trim();
        Phong p = new Phong(maPhong);

        String gioNhan = txtTGN.getText().trim();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date dateGioNhan = dateFormat.parse(gioNhan);

        String trangThai_tmp = (String) cboTrangThai.getSelectedItem();
        boolean trangThai;
        if (trangThai_tmp.equalsIgnoreCase("Đã nhận")) {
            trangThai = true;
        } else {
            trangThai = false;
        }
        return new PhieuDatPhong(maPhieu, p, dateGioNhan, trangThai);
    }

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        String sdt = txtTimSDT.getText().trim();
        dsPDP = pdp_dao.getAllPDPTheoSDT(sdt);
        modelPDP.getDataVector().removeAllElements();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String trangThai;
        for (PhieuDatPhong pdp : dsPDP) {
            KhachHang kh = kh_dao.getKhachHangTheoMa(pdp.getKhachHang().getMaKH());
            NhanVien nv = nv_dao.getNhanVienTheoMa(pdp.getNhanVienLap().getMaNV());
            String tgNhan = formatter.format(pdp.getThoiGianNhan());
            String tgDat = formatter.format(pdp.getThoiGianDat());
            if (pdp.isTrangThai()) {
                trangThai = "Đã nhận";
            } else {
                trangThai = "Chờ nhận phòng";
            }
            modelPDP.addRow(new Object[]{pdp.getMaPhieu(), kh.getHoKH() + " " + kh.getTenKH(),
                kh.getSdtKH(), pdp.getPhong().getMaPhong(), tgDat, tgNhan, nv.getHoNV() + " " + nv.getTenNV(), trangThai});
        }
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnCapNhat)) {
            try {
                int r = tablePhieu.getSelectedRow();
                if (r == -1) {
                    JOptionPane.showMessageDialog(null, "Bạn chưa chọn dòng");
                    return;
                }
                if (tablePhieu.getSelectedRowCount() > 1) {
                    JOptionPane.showMessageDialog(null, "Chỉ được chọn 1 dòng để sửa");
                    return;
                }

                PhieuDatPhong pd = LayDuLieuTxtPDP();

                if (!phong_dao.kiemTraMaPhong(pd.getPhong().getMaPhong())) {
                    JOptionPane.showMessageDialog(null, "Không tồn tại phòng này, định dạng mã phòng là P và 3 kí số (Pxxx)");
                    return;
                }
                if (validPDP()) {
                    try {
                        if (pdp_dao.updatePDP(pd)) {
                            JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                            modelPDP.setRowCount(0);
                            napDuLieuPDP();
                        } else {
                            JOptionPane.showMessageDialog(null, "Không thể sửa, hãy kiểm tra lại");
                        }
                    } catch (Exception e1) {
                        e1.printStackTrace();
                    }
                }
            } catch (ParseException ex) {

            }
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private boolean validPDP() throws ParseException {
        String maPhieu = txtMaPhieu.getText().trim();
        String maPhong = txtMaPhong.getText().trim();
        String gioNhan = txtTGN.getText().trim();

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date dateGioNhan = dateFormat.parse(gioNhan);

        PhieuDatPhong pd = pdp_dao.getPDPTheoMa(maPhieu);

        if (!(maPhong.length() > 0 && maPhong.matches("(P)\\d{3}"))) {
            JOptionPane.showMessageDialog(null, "Định dạng mã phòng là P và 3 kí số (Pxxx)");
            txtMaPhong.requestFocus();
            return false;
        } else if (!(gioNhan.length() > 0 && gioNhan.matches("^\\d{1,2}/\\d{1,2}/\\d{4} \\d{1,2}:\\d{1,2}:\\d{1,2}$"))) {
            JOptionPane.showMessageDialog(null, "Ngày giờ theo định dạng dd/MM/yyyy HH:mm:ss");
            txtTGN.requestFocus();
            return false;
        } else if (dateGioNhan.compareTo(pd.getThoiGianDat()) <= 0) {
            JOptionPane.showMessageDialog(null, "Thời gian nhận phải lớn hơn thời gian đặt");
            return false;
        }

        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GD_PhieuDatPhong;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnTim;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablePhieu;
    private javax.swing.JButton txtLamMoi;
    private javax.swing.JTextField txtMaPhieu;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTGD;
    private javax.swing.JTextField txtTGN;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTenNV;
    private javax.swing.JTextField txtTimSDT;
    // End of variables declaration//GEN-END:variables
}
