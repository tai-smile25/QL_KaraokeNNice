/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import connectDB.ConnectDB;
import dao.Phong_DAO;
import entity.LoaiPhong;
import entity.Phong;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author PC BAO THONG
 */
public class GD_DSPhong extends javax.swing.JPanel {

    private Phong_DAO phongDAO;
    private DefaultTableModel modelPhong;
    private ArrayList<Phong> dsPhong;

    public GD_DSPhong() {
        try {
            ConnectDB.getInstance().connect();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        phongDAO = new Phong_DAO();
        initComponents();
        tableDanhSachPhong();
    }

    private void tableDanhSachPhong() {
        PromptSupport.setPrompt("Nhập mã phòng", txtTim);
        tableDSPhong.getTableHeader().setFont(new Font("Cambria", Font.PLAIN, 16));
        tableDSPhong.getTableHeader().setOpaque(false);
        tableDSPhong.getTableHeader().setBackground(new Color(32, 136, 203));
        tableDSPhong.getTableHeader().setForeground(new Color(255, 255, 255));
        modelPhong = (DefaultTableModel) tableDSPhong.getModel();
        napDuLieuPhong();
    }

    private void napDuLieuPhong() {
        dsPhong = phongDAO.getAllPhong();
        for (Phong p : dsPhong) {
            LoaiPhong lp = phongDAO.getLoaiPhongTheoMa(p.getLoaiPhong().getMaLP());
            String tinhTrang;
            if (p.isTinhTrang()) {
                tinhTrang = "Sẵn sàng";
            } else {
                tinhTrang = "Bảo trì";
            }
            modelPhong.addRow(new Object[]{p.getMaPhong(), p.getLoaiPhong().getMaLP(), lp.getTenLoaiPhong(),
                lp.getGiaTien(), p.getSoNguoi(), p.getTrangThai(), tinhTrang});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btngTinhTrang = new javax.swing.ButtonGroup();
        GD_DSPhong = new javax.swing.JPanel();
        panelNorth2 = new javax.swing.JPanel();
        lblMaDV1 = new javax.swing.JLabel();
        txtMaPhong = new javax.swing.JTextField();
        lblDonGia1 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        lblTenDV1 = new javax.swing.JLabel();
        txtTenLP = new javax.swing.JTextField();
        lblHsd1 = new javax.swing.JLabel();
        lblXuatXu1 = new javax.swing.JLabel();
        comboTrangThai = new javax.swing.JComboBox<>();
        lblDonViBan1 = new javax.swing.JLabel();
        comboSucChua = new javax.swing.JComboBox<>();
        lblTinhTrang = new javax.swing.JLabel();
        radioBaoTri = new javax.swing.JRadioButton();
        radioSanSang = new javax.swing.JRadioButton();
        btnCapNhat = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnTim = new javax.swing.JButton();
        txtTim = new javax.swing.JTextField();
        txtMaLP = new javax.swing.JTextField();
        panelCenter1 = new javax.swing.JPanel();
        scrollPane2 = new javax.swing.JScrollPane();
        tableDSPhong = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        GD_DSPhong.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        GD_DSPhong.setMinimumSize(new java.awt.Dimension(1200, 520));
        GD_DSPhong.setPreferredSize(new java.awt.Dimension(1200, 520));
        GD_DSPhong.setLayout(new java.awt.BorderLayout());

        panelNorth2.setBackground(new java.awt.Color(255, 255, 255));
        panelNorth2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin phòng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 0, 16))); // NOI18N
        panelNorth2.setMinimumSize(new java.awt.Dimension(1200, 300));
        panelNorth2.setPreferredSize(new java.awt.Dimension(1200, 300));
        java.awt.GridBagLayout panelNorth2Layout = new java.awt.GridBagLayout();
        panelNorth2Layout.columnWidths = new int[] {0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0};
        panelNorth2Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        panelNorth2.setLayout(panelNorth2Layout);

        lblMaDV1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblMaDV1.setText("Mã phòng");
        lblMaDV1.setMaximumSize(new java.awt.Dimension(110, 40));
        lblMaDV1.setMinimumSize(new java.awt.Dimension(110, 40));
        lblMaDV1.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth2.add(lblMaDV1, gridBagConstraints);

        txtMaPhong.setBackground(new java.awt.Color(242, 242, 242));
        txtMaPhong.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtMaPhong.setText("DVB001");
        txtMaPhong.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtMaPhong.setEnabled(false);
        txtMaPhong.setMaximumSize(new java.awt.Dimension(250, 30));
        txtMaPhong.setMinimumSize(new java.awt.Dimension(250, 30));
        txtMaPhong.setPreferredSize(new java.awt.Dimension(200, 30));
        txtMaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaPhongActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        panelNorth2.add(txtMaPhong, gridBagConstraints);

        lblDonGia1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblDonGia1.setText("Đơn giá");
        lblDonGia1.setMaximumSize(new java.awt.Dimension(155, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth2.add(lblDonGia1, gridBagConstraints);

        txtDonGia.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtDonGia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDonGia.setMaximumSize(new java.awt.Dimension(250, 30));
        txtDonGia.setMinimumSize(new java.awt.Dimension(250, 30));
        txtDonGia.setPreferredSize(new java.awt.Dimension(200, 30));
        txtDonGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDonGiaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        panelNorth2.add(txtDonGia, gridBagConstraints);

        lblTenDV1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblTenDV1.setText("Mã loại phòng");
        lblTenDV1.setMaximumSize(new java.awt.Dimension(110, 40));
        lblTenDV1.setMinimumSize(new java.awt.Dimension(110, 40));
        lblTenDV1.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth2.add(lblTenDV1, gridBagConstraints);

        txtTenLP.setEditable(false);
        txtTenLP.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtTenLP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtTenLP.setMaximumSize(new java.awt.Dimension(250, 30));
        txtTenLP.setMinimumSize(new java.awt.Dimension(250, 30));
        txtTenLP.setPreferredSize(new java.awt.Dimension(200, 30));
        txtTenLP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenLPActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        panelNorth2.add(txtTenLP, gridBagConstraints);

        lblHsd1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblHsd1.setText("Tên loại phòng");
        lblHsd1.setMaximumSize(new java.awt.Dimension(110, 40));
        lblHsd1.setMinimumSize(new java.awt.Dimension(110, 40));
        lblHsd1.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth2.add(lblHsd1, gridBagConstraints);

        lblXuatXu1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblXuatXu1.setText("Trạng thái");
        lblXuatXu1.setMaximumSize(new java.awt.Dimension(110, 40));
        lblXuatXu1.setMinimumSize(new java.awt.Dimension(110, 40));
        lblXuatXu1.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth2.add(lblXuatXu1, gridBagConstraints);

        comboTrangThai.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        comboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trống", "Đã được đặt", "Đang sử dụng" }));
        comboTrangThai.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        comboTrangThai.setMaximumSize(new java.awt.Dimension(250, 30));
        comboTrangThai.setMinimumSize(new java.awt.Dimension(250, 30));
        comboTrangThai.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 8;
        panelNorth2.add(comboTrangThai, gridBagConstraints);

        lblDonViBan1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblDonViBan1.setText("Sức chứa");
        lblDonViBan1.setMaximumSize(new java.awt.Dimension(110, 40));
        lblDonViBan1.setMinimumSize(new java.awt.Dimension(110, 40));
        lblDonViBan1.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth2.add(lblDonViBan1, gridBagConstraints);

        comboSucChua.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        comboSucChua.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "15", "20" }));
        comboSucChua.setMaximumSize(new java.awt.Dimension(250, 30));
        comboSucChua.setMinimumSize(new java.awt.Dimension(250, 30));
        comboSucChua.setPreferredSize(new java.awt.Dimension(200, 30));
        comboSucChua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSucChuaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        panelNorth2.add(comboSucChua, gridBagConstraints);

        lblTinhTrang.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        lblTinhTrang.setText("Tình trạng");
        lblTinhTrang.setMaximumSize(new java.awt.Dimension(110, 40));
        lblTinhTrang.setMinimumSize(new java.awt.Dimension(110, 40));
        lblTinhTrang.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth2.add(lblTinhTrang, gridBagConstraints);

        radioBaoTri.setBackground(new java.awt.Color(255, 255, 255));
        btngTinhTrang.add(radioBaoTri);
        radioBaoTri.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        radioBaoTri.setText("Bảo trì");
        radioBaoTri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBaoTriActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth2.add(radioBaoTri, gridBagConstraints);

        radioSanSang.setBackground(new java.awt.Color(255, 255, 255));
        btngTinhTrang.add(radioSanSang);
        radioSanSang.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        radioSanSang.setText("Sẵn sàng");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        panelNorth2.add(radioSanSang, gridBagConstraints);

        btnCapNhat.setBackground(new java.awt.Color(102, 255, 51));
        btnCapNhat.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        btnCapNhat.setForeground(new java.awt.Color(255, 255, 255));
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/system-update.png"))); // NOI18N
        btnCapNhat.setText("Cập nhật thông tin");
        btnCapNhat.setMaximumSize(new java.awt.Dimension(210, 40));
        btnCapNhat.setMinimumSize(new java.awt.Dimension(210, 30));
        btnCapNhat.setPreferredSize(new java.awt.Dimension(210, 30));
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth2.add(btnCapNhat, gridBagConstraints);

        btnLamMoi.setBackground(new java.awt.Color(0, 255, 153));
        btnLamMoi.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        btnLamMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh.png"))); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.setMaximumSize(new java.awt.Dimension(135, 40));
        btnLamMoi.setMinimumSize(new java.awt.Dimension(135, 30));
        btnLamMoi.setPreferredSize(new java.awt.Dimension(130, 30));
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 16;
        panelNorth2.add(btnLamMoi, gridBagConstraints);

        btnXoa.setBackground(new java.awt.Color(204, 204, 204));
        btnXoa.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/eraser.png"))); // NOI18N
        btnXoa.setText("Xóa trắng");
        btnXoa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnXoa.setMaximumSize(new java.awt.Dimension(135, 40));
        btnXoa.setMinimumSize(new java.awt.Dimension(135, 30));
        btnXoa.setPreferredSize(new java.awt.Dimension(120, 30));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        panelNorth2.add(btnXoa, gridBagConstraints);

        btnTim.setBackground(new java.awt.Color(121, 188, 215));
        btnTim.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        btnTim.setForeground(new java.awt.Color(255, 255, 255));
        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/search-user.png"))); // NOI18N
        btnTim.setText("Tìm");
        btnTim.setMaximumSize(new java.awt.Dimension(90, 30));
        btnTim.setMinimumSize(new java.awt.Dimension(90, 30));
        btnTim.setPreferredSize(new java.awt.Dimension(135, 30));
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });
        btnTim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnTimKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelNorth2.add(btnTim, gridBagConstraints);

        txtTim.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtTim.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtTim.setMaximumSize(new java.awt.Dimension(250, 30));
        txtTim.setMinimumSize(new java.awt.Dimension(250, 30));
        txtTim.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        panelNorth2.add(txtTim, gridBagConstraints);

        txtMaLP.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtMaLP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtMaLP.setMaximumSize(new java.awt.Dimension(250, 30));
        txtMaLP.setMinimumSize(new java.awt.Dimension(250, 30));
        txtMaLP.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        panelNorth2.add(txtMaLP, gridBagConstraints);

        GD_DSPhong.add(panelNorth2, java.awt.BorderLayout.PAGE_START);

        panelCenter1.setBackground(new java.awt.Color(255, 255, 255));
        panelCenter1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        panelCenter1.setLayout(new java.awt.BorderLayout());

        scrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        scrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách phòng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 0, 16))); // NOI18N
        scrollPane2.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N

        tableDSPhong.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        tableDSPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phòng", "Mã loại phòng", "Tên loại phòng", "Đơn giá", "Sức chứa", "Trạng thái", "Tình trạng"
            }
        ));
        tableDSPhong.setRowHeight(25);
        tableDSPhong.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tableDSPhong.setShowHorizontalLines(true);
        tableDSPhong.getTableHeader().setReorderingAllowed(false);
        tableDSPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDSPhongMouseClicked(evt);
            }
        });
        scrollPane2.setViewportView(tableDSPhong);

        panelCenter1.add(scrollPane2, java.awt.BorderLayout.CENTER);

        GD_DSPhong.add(panelCenter1, java.awt.BorderLayout.CENTER);

        add(GD_DSPhong, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaPhongActionPerformed

    private void txtDonGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDonGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonGiaActionPerformed

    private void comboSucChuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSucChuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSucChuaActionPerformed

    private void radioBaoTriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBaoTriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBaoTriActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        modelPhong.getDataVector().removeAllElements();
        xoaTrang();
        napDuLieuPhong();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        xoaTrang();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed

        String maPhong = txtTim.getText().trim();
        Phong p = phongDAO.getPhongTheoMa(maPhong);
        LoaiPhong lp = phongDAO.getLoaiPhongTheoMa(p.getLoaiPhong().getMaLP());
        String tinhTrang;
        if (p.isTinhTrang()) {
            tinhTrang = "Sẵn sàng";
        } else {
            tinhTrang = "Bảo trì";
        }
        modelPhong.getDataVector().removeAllElements();
        xoaTrang();
        modelPhong.addRow(new Object[]{p.getMaPhong(), p.getLoaiPhong().getMaLP(), lp.getTenLoaiPhong(),
            lp.getGiaTien(), p.getSoNguoi(), p.getTrangThai(), tinhTrang});

    }//GEN-LAST:event_btnTimActionPerformed

    private void tableDSPhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDSPhongMouseClicked
        int r = tableDSPhong.getSelectedRow();
        txtMaPhong.setText(modelPhong.getValueAt(r, 0).toString());
        txtMaLP.setText(modelPhong.getValueAt(r, 1).toString());
        txtTenLP.setText(modelPhong.getValueAt(r, 2).toString());
        txtDonGia.setText(modelPhong.getValueAt(r, 3).toString());

        comboSucChua.setSelectedItem(modelPhong.getValueAt(r, 4).toString());
        comboTrangThai.setSelectedItem(modelPhong.getValueAt(r, 5).toString());
        String tinhTrang = modelPhong.getValueAt(r, 5).toString();
        if (tinhTrang.equalsIgnoreCase("Bảo trì")) {
            radioBaoTri.setSelected(true);
            radioSanSang.setSelected(false);
        } else {
            radioBaoTri.setSelected(false);
            radioSanSang.setSelected(true);
        }
    }//GEN-LAST:event_tableDSPhongMouseClicked

    private void txtTenLPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenLPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenLPActionPerformed

    private void btnTimKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnTimKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKeyPressed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnCapNhat)) {
            int r = tableDSPhong.getSelectedRow();
            if (r == -1) {
                JOptionPane.showMessageDialog(null, "Bạn chưa chọn dòng");
                return;
            }
            if (tableDSPhong.getSelectedRowCount() > 1) {
                JOptionPane.showMessageDialog(null, "Chỉ được chọn 1 dòng để sửa");
                return;
            }
            Phong p = getDuLieuNhap();
            if (valid()) {
                try {
                    if (phongDAO.updatePhong(p)) {
                        JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                        modelPhong.setRowCount(0);
                        napDuLieuPhong();
                    } else {
                        JOptionPane.showMessageDialog(null, "Không thể sửa, hãy kiểm tra lại");
                    }
                } catch (Exception e1) {
                    e1.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    

    

    private void xoaTrang() {
        txtDonGia.setText("");
        txtMaPhong.setText("");
        txtTim.setText("");
        txtMaLP.setText("");
        txtTenLP.setText("");
        txtDonGia.requestFocus();
    }

    private Phong getDuLieuNhap() {
        String maLP = txtMaLP.getText().trim();
        String donGia = txtDonGia.getText().trim();
        String sSL = comboSucChua.getSelectedItem().toString();
        int sl = Integer.parseInt(sSL);
        String trangThai = comboTrangThai.getSelectedItem().toString();
        boolean tinhTrang;
        if (radioBaoTri.isSelected()) {
            tinhTrang = false;
        } else {
            tinhTrang = true;
        }
        return new Phong(txtMaPhong.getText().trim(), new LoaiPhong(maLP), sl, trangThai, tinhTrang);
    }

    public boolean isNumber(String str) {
        try {
            double d = Double.parseDouble(str);
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }

    private boolean valid() {
        String maLP = txtMaLP.getText().trim();
        if (!(maLP.length() > 0 && maLP.matches("(PV|PT)\\d{3}"))) {
            JOptionPane.showMessageDialog(null, "Định dạng mã phòng là PT hoặc PV và 3 kí số");
            txtMaLP.requestFocus();
            return false;
        } else if (!phongDAO.kiemTraMaLoaiPhong(txtMaLP.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Không tồn tại loại phòng này");
            return false;
        }
        String sDonGia = txtDonGia.getText().trim();
        if (!isNumber(sDonGia)) {
            JOptionPane.showMessageDialog(null, "Đơn giá phải là số");
            txtDonGia.requestFocus();
            return false;
        } else if (!(sDonGia.length() > 0)) {
            JOptionPane.showMessageDialog(null, "Đơn giá không được trống");
            txtDonGia.requestFocus();
            return false;
        }
        double donGia = Double.parseDouble(sDonGia);
        if (donGia < 0) {
            JOptionPane.showMessageDialog(null, "Tiền nhận phải lớn hơn hoặc bằng 0");
            txtDonGia.requestFocus();
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GD_DSPhong;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup btngTinhTrang;
    private javax.swing.JComboBox<String> comboSucChua;
    private javax.swing.JComboBox<String> comboTrangThai;
    private javax.swing.JLabel lblDonGia1;
    private javax.swing.JLabel lblDonViBan1;
    private javax.swing.JLabel lblHsd1;
    private javax.swing.JLabel lblMaDV1;
    private javax.swing.JLabel lblTenDV1;
    private javax.swing.JLabel lblTinhTrang;
    private javax.swing.JLabel lblXuatXu1;
    private javax.swing.JPanel panelCenter1;
    private javax.swing.JPanel panelNorth2;
    private javax.swing.JRadioButton radioBaoTri;
    private javax.swing.JRadioButton radioSanSang;
    private javax.swing.JScrollPane scrollPane2;
    private javax.swing.JTable tableDSPhong;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaLP;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtTenLP;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
}
