/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import com.raven.chart.ModelChart;
import connectDB.ConnectDB;
import dao.HoaDon_DAO;
import dao.KhachHang_DAO;
import entity.HoaDon;
import entity.KhachHang;
import java.awt.Color;
import java.awt.Font;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author PC BAO THONG
 */
public class ThongKeKhachHang extends javax.swing.JPanel {

    private HoaDon_DAO hoadonDAO;
    private KhachHang_DAO khachhangDAO;
    private DefaultTableModel model;

    /**
     * Creates new form ThongKeDoanhThuThang
     */
    public ThongKeKhachHang() {
        try {
            ConnectDB.getInstance().connect();
        } catch (Exception e) {
            e.printStackTrace();
        }
        hoadonDAO = new HoaDon_DAO();
        khachhangDAO = new KhachHang_DAO();
        initComponents();
        addItemCombobox();
        tableKH();
        themVaoTable("0");
        table.setRowSelectionInterval(0, 0);
        updateLable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDoanhThuPT = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDoanhThuPV = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDoanhThuDV = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTongDTPhong = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 520));
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 15, 0};
        layout.rowHeights = new int[] {0};
        setLayout(layout);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(900, 520));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(800, 400));

        table.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KH", "Họ", "Tên", "Tổng chi tiêu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowHeight(40);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(jScrollPane1, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 520));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 10, 0};
        jPanel1Layout.rowHeights = new int[] {0, 20, 0, 20, 0, 20, 0, 20, 0};
        jPanel1.setLayout(jPanel1Layout);

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel1.setText("Chọn khoảng thời gian");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel4.setText("Doanh thu phòng thường");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel4, gridBagConstraints);

        txtDoanhThuPT.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtDoanhThuPT.setText("0 VND");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(txtDoanhThuPT, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel6.setText("Doanh thu phòng VIP");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel6, gridBagConstraints);

        txtDoanhThuPV.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtDoanhThuPV.setText("0 VND");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(txtDoanhThuPV, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel8.setText("Doanh thu dịch vụ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel8, gridBagConstraints);

        txtDoanhThuDV.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtDoanhThuDV.setText("0 VND");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(txtDoanhThuDV, gridBagConstraints);

        comboTG.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        comboTG.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "7 ngày", "30 ngày" }));
        comboTG.setFocusable(false);
        comboTG.setPreferredSize(new java.awt.Dimension(100, 30));
        comboTG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTGActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(comboTG, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel3.setText("Tổng doanh thu phòng");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel3, gridBagConstraints);

        txtTongDTPhong.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        txtTongDTPhong.setText("0 VND");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(txtTongDTPhong, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    private void addItemCombobox() {
        ArrayList<Integer> i = hoadonDAO.layNamTuHoaDon();
        if (comboTG.getModel().getSize() == 3) {
            for (Integer integer : i) {
                comboTG.addItem(integer + "");
            }
        }
    }
    private void comboTGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTGActionPerformed
        // TODO add your handling code here:
        String ac = comboTG.getSelectedItem().toString();
        if (ac.equalsIgnoreCase("7 ngày")) {
            model.setRowCount(0);
            themVaoTable("7");
        } else if (ac.equalsIgnoreCase("30 ngày")) {
            model.setRowCount(0);
            themVaoTable("30");
        } else {
            model.setRowCount(0);
            themVaoTable("0");
        }
        ArrayList<Integer> i = hoadonDAO.layNamTuHoaDon();
        for (Integer integer : i) {
            if (ac.equalsIgnoreCase(integer + "")) {
                model.setRowCount(0);
                themVaoTable(integer + "");
                break;
            }
        }
    }//GEN-LAST:event_comboTGActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        updateLable();
    }//GEN-LAST:event_tableMouseClicked
    private void tableKH() {
        table.getTableHeader().setFont(new Font("Cambria", Font.PLAIN, 18));
        table.getTableHeader().setOpaque(false);
        table.getTableHeader().setBackground(new Color(32, 136, 203));
        table.getTableHeader().setForeground(new Color(255, 255, 255));
        model = (DefaultTableModel) table.getModel();
    }

    private void themVaoTable(String ngay) {
        DecimalFormatSymbols symbols = new DecimalFormatSymbols(Locale.getDefault());
        symbols.setGroupingSeparator('.');
        DecimalFormat df = new DecimalFormat("#,##0.##", symbols);
        String[] maKHDT = null;
        ArrayList<Integer> j = hoadonDAO.layNamTuHoaDon();
        if (ngay.equalsIgnoreCase("7")) {
            maKHDT = hoadonDAO.layDoanhThuTheoKHTheoTG(7);
        } else if (ngay.equalsIgnoreCase("30")) {
            maKHDT = hoadonDAO.layDoanhThuTheoKHTheoTG(30);
        } else if (ngay.equalsIgnoreCase("0")) {
            maKHDT = hoadonDAO.layDoanhThuTheoKH();
        } else {
            for (Integer integer : j) {
                if (ngay.equalsIgnoreCase(integer + "")) {
                    maKHDT = hoadonDAO.layDoanhThuTheoKHTheoNam(ngay);
                    break;
                }
            }
        }
        for (int i = 0; i < maKHDT.length; i = i + 2) {
            KhachHang kh = khachhangDAO.getKhachHangTheoMa(maKHDT[i]);
            Double dt = Double.valueOf(maKHDT[i + 1]);
            model.addRow(new Object[]{kh.getMaKH(), kh.getHoKH(), kh.getTenKH(), df.format(dt) + " VND"});
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static final javax.swing.JComboBox<String> comboTG = new javax.swing.JComboBox<>();
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JLabel txtDoanhThuDV;
    private javax.swing.JLabel txtDoanhThuPT;
    private javax.swing.JLabel txtDoanhThuPV;
    private javax.swing.JLabel txtTongDTPhong;
    // End of variables declaration//GEN-END:variables

    private void updateLable() {
        int row = table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng");
            return;
        }
        String maKH = table.getValueAt(row, 0).toString();
        DecimalFormatSymbols symbols = new DecimalFormatSymbols(Locale.getDefault());
        symbols.setGroupingSeparator('.');
        DecimalFormat df = new DecimalFormat("#,##0.##", symbols);
        //
        String ac = comboTG.getSelectedItem().toString();
        if (ac.equalsIgnoreCase("30 ngày")) {
            double doanhThuVIP = hoadonDAO.layTongDoanhThuPVTheoKHTheoTG(maKH, 30);
            txtDoanhThuPV.setText(df.format(doanhThuVIP) + " VND");
            //
            double doanhThuT = hoadonDAO.layTongDoanhThuPTTheoKHTheoTG(maKH, 30);
            txtDoanhThuPT.setText(df.format(doanhThuT) + " VND");
            //
            double tongDoanhThuP = doanhThuVIP + doanhThuT;
            txtTongDTPhong.setText(df.format(tongDoanhThuP) + " VND");
            //
            double tongDT = hoadonDAO.layTongDoanhThuTheoKHTheoTG(maKH, 30);
            double doanhthuDV = tongDT - tongDoanhThuP;
            txtDoanhThuDV.setText(df.format(doanhthuDV) + " VND");
        } else if (ac.equalsIgnoreCase("7 ngày")) {
            double doanhThuVIP = hoadonDAO.layTongDoanhThuPVTheoKHTheoTG(maKH, 7);
            txtDoanhThuPV.setText(df.format(doanhThuVIP) + " VND");
            //
            double doanhThuT = hoadonDAO.layTongDoanhThuPTTheoKHTheoTG(maKH, 7);
            txtDoanhThuPT.setText(df.format(doanhThuT) + " VND");
            //
            double tongDoanhThuP = doanhThuVIP + doanhThuT;
            txtTongDTPhong.setText(df.format(tongDoanhThuP) + " VND");
            //
            double tongDT = hoadonDAO.layTongDoanhThuTheoKHTheoTG(maKH, 7);
            double doanhthuDV = tongDT - tongDoanhThuP;
            txtDoanhThuDV.setText(df.format(doanhthuDV) + " VND");
        } else {
            double doanhThuVIP = hoadonDAO.layTongDoanhThuPVTheoKHTheoALLTG(maKH);
            txtDoanhThuPV.setText(df.format(doanhThuVIP) + " VND");
            //
            double doanhThuT = hoadonDAO.layTongDoanhThuPTTheoKHTheoALLTG(maKH);
            txtDoanhThuPT.setText(df.format(doanhThuT) + " VND");
            //
            double tongDoanhThuP = doanhThuVIP + doanhThuT;
            txtTongDTPhong.setText(df.format(tongDoanhThuP) + " VND");
            double tongDT = hoadonDAO.layTongDoanhThuTheoKH(maKH);
            double doanhthuDV = tongDT - tongDoanhThuP;
            txtDoanhThuDV.setText(df.format(doanhthuDV) + " VND");
        }
        ArrayList<Integer> i = hoadonDAO.layNamTuHoaDon();
        for (Integer integer : i) {
            if (ac.equalsIgnoreCase(integer + "")) {
                double doanhThuVIP = hoadonDAO.layTongDoanhThuPVTheoKHTheoNam(maKH, integer + "");
                txtDoanhThuPV.setText(df.format(doanhThuVIP) + " VND");
                //
                double doanhThuT = hoadonDAO.layTongDoanhThuPTTheoKHTheoNam(maKH, integer + "");
                txtDoanhThuPT.setText(df.format(doanhThuT) + " VND");
                //
                double tongDoanhThuP = doanhThuVIP + doanhThuT;
                txtTongDTPhong.setText(df.format(tongDoanhThuP) + " VND");
                // 
                double tongDT = hoadonDAO.layTongDoanhThuTheoKHTheoNam(ac, maKH);
                double doanhthuDV = tongDT - tongDoanhThuP;
                txtDoanhThuDV.setText(df.format(doanhthuDV) + " VND");
                break;
            }
        }
    }
}
